#!/usr/bin/env bash

#for type in "" tuned limited; do

export ZINC_SEARCH_HOST='http://admin:dbbenchmarks@localhost:4080'

for type in ""; do
  [ ! -z "$type" ] && suffix="_$type" || suffix=""
  echo -e "Zincsearch (type $type):"
  if [ "$(ls zincsearch/idx$suffix/$test)" ]; then
    echo -e "${COLORED}\tNo need to rebuild${NC}"
  else
    docker-compose -f ../../docker-compose.yml --env-file ../../.env stop zincsearch
    docker-compose -f ../../docker-compose.yml --env-file ../../.env rm -f zincsearch
    mkdir -p zincsearch/idx$suffix
    chmod -R 777 zincsearch/idx$suffix # otherwise zincsearch in docker won't start
    chmod -R 777 data                  # otherwise logstash may not be able to read the files
    cmd="test=$test suffix=$suffix docker-compose -f ../../docker-compose.yml --env-file ../../.env up -d zincsearch"
    echo -e "\tStarting zincsearch ($cmd)"
    eval "$cmd"
    echo -e "\tWaiting for zincsearch to come up"

    if timeout 60 grep -qm1 'Listen on :4080' <(docker logs -f zincsearch_engine 2>&1) >/dev/null; then
      echo -e '\tAccepting connections'
    else
      echo -e '\Engine failed to start properly in 60 seconds'
      exit 1
    fi

    curl "${ZINC_SEARCH_HOST}/es/_index_template" \
      -X POST \
      --data-binary @./zincsearch/template.json

    if [ ! -f data/data.jsonl ]; then
      php ./typesense/csv_jsonl.php ./data/data.csv ./data/data.jsonl
    fi

    if [ ! -f data/splitted_json.aaaaa ]; then
      awk '{ print "{ \"create\" : { \"_index\" : \"hn\" } }\n" $0 }' ./data/data.jsonl >./data/bulk.jsonl
      split -l 20000 -a 5 ./data/bulk.jsonl ./data/${test}_splitted.
      rm ./data/bulk.jsonl
    fi

    echo -en "\tStarting loading at "
    date
    for f in ./data/${test}_splitted.*; do
      echo "\nUpload chunk $f"

      curl "${ZINC_SEARCH_HOST}/api/_bulk" \
        -X POST \
        --data-binary @$f

      rm $f
    done
    echo -en "\tFinished loading to index at "
    date

    insertSize=$(cat data/data.jsonl | wc -l)
    rm ./data/data.jsonl

    echo -en "\tWait until Zincsearch process batch"
    for i in $(seq 1 300); do
      if curl -s "${ZINC_SEARCH_HOST}/api/hn/_search" -X POST -d '{"search_type": "alldocuments","max_results": 0}' | jq .hits.total.value | grep $insertSize; then
        echo -en "\tSuccess"
        break
      fi
      printf '%s' "."
      sleep 1
    done

    #inserted=$(curl -s "${ZINC_SEARCH_HOST}/api/hn/_search" -X POST -d '{"search_type": "alldocuments","max_results": 0}' | jq .hits.total.value)
    #echo -e "\tCount of inserted documents: $inserted"
    #
    #if [[ ! $inserted -eq 1165439 ]]; then
    #  echo "Inserted count mismatch"
    #  exit 1
    #fi

  fi

done
