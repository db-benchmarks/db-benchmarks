#!/usr/bin/env bash

for type in ""; do
  [ ! -z "$type" ] && suffix="_$type" || suffix="";
  echo -e "Postgres (type $type):"

    cmd="test=$test suffix=$suffix docker-compose -f ../../docker-compose.yml --env-file ../../.env up -d postgres"
    echo -e "\tStarting postgres ($cmd)"
    eval "$cmd"
    while ! nc -z localhost 5432; do sleep 1; done
    sleep 5
    while ! nc -z localhost 5432; do sleep 1; done
    sleep 5

  if [[ $(docker exec postgres_engine psql -h0 -U postgres -c "select count(*) from $test;") ]]; then
    echo -e "\tNo need to rebuild"
  else
    docker exec postgres_engine psql -h0 -U postgres \
    -c "DROP TABLE IF EXISTS $test;
    CREATE TABLE $test(
    id bigint,
    story_id bigint,
    story_text text,
    story_author varchar(1024),
    comment_id bigint,
    comment_text text,
    comment_author varchar(1024),
    comment_ranking bigint,
    author_comment_count bigint,
    story_comment_count bigint,
    story_text_ts tsvector GENERATED ALWAYS AS (to_tsvector('english', story_text)) STORED,
    story_author_ts tsvector GENERATED ALWAYS AS (to_tsvector('english', story_author)) STORED,
    comment_text_ts tsvector GENERATED ALWAYS AS (to_tsvector('english', comment_text)) STORED,
    comment_author_ts tsvector GENERATED ALWAYS AS (to_tsvector('english', comment_author)) STORED);
    CREATE INDEX ts_idx ON $test USING GIN (story_text_ts, story_author_ts, comment_text_ts, comment_author_ts);"

    echo -en "\tStarting loading at "; date
    docker exec postgres_engine psql -h0 -U postgres -c "COPY $test FROM '/input/data.csv' WITH (FORMAT csv);"

    hook="postgres/post_load$suffix.sh"; if [ -f "${hook}" ] && [ -r "${hook}" ] && [ -x "${hook}" ]; then
      echo -e "\tDetected post loading hook, running it";
      . $hook
    fi
    echo -en "\tFinished loading to index at "; date
  fi
done

