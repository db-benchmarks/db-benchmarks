#!/usr/bin/env bash

#for type in "" tuned limited; do
for type in ""; do
  [ ! -z "$type" ] && suffix="_$type" || suffix=""; 
  echo -e "Elasticsearch (type $type):"
  if [ "$(ls es/idx$suffix)" ]; then
    echo -e "${COLORED}\tNo need to rebuild${NC}"
  else
    docker-compose -f ../../docker-compose.yml --env-file ../../.env stop elasticsearch
    docker-compose -f ../../docker-compose.yml --env-file ../../.env rm -f elasticsearch
    mkdir -p es/idx$suffix
    chmod -R 777 es/idx$suffix # otherwise elasticsearch in docker won't start
    chmod -R 777 data # otherwise logstash may not be able to read the files
    cmd="test=$test suffix=$suffix docker-compose -f ../../docker-compose.yml --env-file ../../.env up -d elasticsearch"
    echo -e "\tStarting elasticsearch ($cmd)"
    eval "$cmd"
    echo -e "\tWaiting for elasticsearch to come up"
    while ! nc -z localhost 9200; do sleep 1; done
    echo -en "\tStarting loading at "; date

    docker run -e PIPELINE_BATCH_SIZE=10000 \
    --env-file ../../.env \
    -e XPACK_MONITORING_ENABLED=false \
    -e PIPELINE_WORKERS=$(nproc) \
    --network=db-benchmarks_default --rm -it \
    -v $(pwd)/data/:/data/ \
    -v $(pwd)/es/logstash$suffix/logstash.conf:/usr/share/logstash/pipeline/logstash.conf \
    -v $(pwd)/es/logstash$suffix/template.json:/template.json \
    docker.elastic.co/logstash/logstash:7.15.2

    hook="es/logstash$suffix/post_load.sh"; if [ -f "${hook}" ] && [ -r "${hook}" ] && [ -x "${hook}" ]; then
      echo -e "\tDetected post loading hook, running it";
      . $hook
    fi
    echo -en "\tFinished loading at "; date
  fi
done
